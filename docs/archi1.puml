@startuml archi1

package techpro {
    package model {
        enum Brand {
        }
        enum Category {
        }

        abstract class Product {
            # id: UUID
            # brand: Brand
            # price: double
            # label: string
            # category: Category
        }

        class Computer extends Product {
            - isDesktop: boolean
        }

        class Phone extends Product {
            - isFixed: boolean
        }

        class Storage extends Product {
            - isUsb: boolean
        }

        class Accessory extends Product {
        }

    }
    package dao{
        interface GlobalDao<T> {
            add(p: T): T
            delete(p: T): T
            update(p: T): T
            get(id: UUID): T
            addAll(listP: List<T>) Set<T>
            deleteAll(listP: List<T>) Set<T>
            updateAll(listP: List<T>) Set<T>
            getAll(): Set<T>
        }

        class ComputerDao implements GlobalDao{
            
        }

        class PhoneDao implements GlobalDao{

        }

        class StorageDao implements GlobalDao{

        }

        class AccessoryDao implements GlobalDao{

        }

    }
    package resource{
        class ComputerResource {
            + addComputer(computer: Computer): Set<Computer>
            + deleteComputer(computer: Computer): Set<Computer>
            + updateComputer(computer: Computer): Set<Computer>
            + getComputer(id: UUID): Computer
            + addComputers(computers: List<Computer>): Set<Computer>
            + deleteComputers(computers: List<Computer>): Set<Computer>
            + updateComputers(computers: List<Computer>): Set<Computer>
            + getComputers(): Set<Computer>
        }

        class PhoneResource {
            + addPhone(phone: Phone): Set<Phone>
            + deletePhone(phone: Phone): Set<Phone>
            + updatePhone(phone: Phone): Set<Phone>
            + getPhone(id: UUID): Phone
            + addPhones(phones: List<Phone>): Set<Phone>
            + deletePhones(phones: List<Phone>): Set<Phone>
            + updatePhones(phones: List<Phone>): Set<Phone>
            + getPhones(): Set<Phone>
        }

        class StorageResource {
            + addStorage(storage: Storage): Set<Storage>
            + deleteStorage(storage: Storage): Set<Storage>
            + updateStorage(storage: Storage): Set<Storage>
            + getStorage(id: UUID): Storage
            + addStorages(storages: List<Storage>): Set<Storage>
            + deleteStorages(storages: List<Storage>): Set<Storage>
            + updateStorages(storages: List<Storage>): Set<Storage>
            + getStorages(): Set<Storage>
        }

        class AccessoryResource {
            + addAccessory(accessory: Accessory): Set<Accessory>
            + deleteAccessory(accessory: Accessory): Set<Accessory>
            + updateAccessory(accessory: Accessory): Set<Accessory>
            + getAccessory(id: UUID): Accessory
            + addAccessories(accessories: List<Accessory>): Set<Accessory>
            + deleteAccessories(accessories: List<Accessory>): Set<Accessory>
            + updateAccessories(accessories: List<Accessory>): Set<Accessory>
            + getAccessories(): Set<Accessory>
        }
    }
}

Product o--> Category
Product o--> Brand

ComputerResource *-up-> ComputerDao
PhoneResource *-up-> PhoneDao
StorageResource *-up-> StorageDao
AccessoryResource *-up-> AccessoryDao

ComputerResource *..> Computer
PhoneResource *..> Phone
StorageResource *..> Storage
AccessoryResource *..> Accessory

@endpuml